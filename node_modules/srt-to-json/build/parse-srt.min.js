!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.parseSRT=t()}(this,function(){"use strict";/**
 * @name parseSRT
 * @desc Parses and converts SRT subtitle data into JSON format. Adapted from the popcorn.js SRT parser plugin.
 * @see http://github.com/NewtopiaDEV
 * @author Newtopia Dev (http://www.newtopia.com)
 * @version 1.0.1
 * @license MIT
 */
function e(e){var t=e.split(":");try{var r=t[2].split(",");return 1===r.length&&(r=t[2].split(".")),3600*parseFloat(t[0],10)+60*parseFloat(t[1],10)+parseFloat(r[0],10)+parseFloat(r[1],10)/1e3}catch(e){return 0}}function t(e,t){for(var r=t;!e[r];)r++;return r}function r(e){for(var t=e.length-1;t>=0&&!e[t];)t--;return t}function n(){for(var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{propName:{}},o=[],p=n.split(/(?:\r\n|\r|\n)/gm),a=r(p)+1,s=0,l=void 0,u=void 0,f=void 0,d=0;d<a;d++){for(f={},u=[],d=t(p,d),f.id=parseInt(p[d++],10),l=p[d++].split(/[\t ]*-->[\t ]*/),f[i.propName.start||"start"]=i.timeInText?l[0]:e(l[0]),s=l[1].indexOf(" "),-1!==s&&(l[1]=l[1].substr(0,s)),f[i.propName.end||"end"]=i.timeInText?l[1]:e(l[1]);d<a&&p[d];)u.push(p[d++]);var c=i.propName.text||"text";f[c]=u.join(" ").replace(/\{(\\[\w]+\(?([\w\d]+,?)+\)?)+\}/gi,"");f[c]=f[c].replace(/</g,"&lt;").replace(/>/g,"&gt;"),f[c]=f[c].replace(/&lt;(\/?(font|b|u|i|s))((\s+(\w|\w[\w\-]*\w)(\s*=\s*(?:".*?"|'.*?'|[^'">\s]+))?)+\s*|\s*)(\/?)&gt;/gi,"<$1$3$7>"),i.ignoreLineBreaks?f[c]=f[c].replace(/\\N/gi,""):f[c]=f[c].replace(/\\N/gi,"<br />"),o.push(f)}return o}return n});
//# sourceMappingURL=parse-srt.min.js.map
